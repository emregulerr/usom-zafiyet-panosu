name: Update Vulnerability Data

on:
  schedule:
    # Her gÃ¼n gece yarÄ±sÄ± (UTC), yani TÃ¼rkiye saati ile 03:00'te Ã§alÄ±ÅŸÄ±r.
    - cron: '0 0 * * *'
  # GitHub arayÃ¼zÃ¼nden "Run workflow" butonu ile manuel olarak tetiklemeye izin verir.
  workflow_dispatch:

jobs:
  update-data:
    # Bu iÅŸin Ã§alÄ±ÅŸacaÄŸÄ± sanal makine tipi
    runs-on: ubuntu-latest

    steps:
      # 1. AdÄ±m: Proje dosyalarÄ±nÄ± Ã§alÄ±ÅŸacak sanal makineye indirir.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. AdÄ±m: Belirtilen Python sÃ¼rÃ¼mÃ¼nÃ¼ kurar.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.2'

      # 3. AdÄ±m: requirements.txt dosyasÄ±nda listelenen gerekli Python kÃ¼tÃ¼phanelerini yÃ¼kler.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. AdÄ±m: Ana Python script'ini Ã§alÄ±ÅŸtÄ±rÄ±r.
      # Bu script, output/ klasÃ¶rÃ¼ndeki CSV ve resim dosyalarÄ±nÄ± oluÅŸturacak/gÃ¼ncelleyecektir.
      - name: Run data fetch and analysis script
        run: python main.py

      # 5. AdÄ±m: EÄŸer output/ klasÃ¶rÃ¼nde bir deÄŸiÅŸiklik varsa (ki her gÃ¼n olacak),
      # bu deÄŸiÅŸiklikleri repoya otomatik olarak "commit"ler ve "push"lar.
      - name: Commit and push if there are changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ğŸ“Š Veri ve gÃ¶rseller otomatik gÃ¼ncellendi"
          # Sadece output klasÃ¶rÃ¼ndeki deÄŸiÅŸiklikleri commit'le
          file_pattern: 'output/*'
          # Commit'i yapacak olan bot kullanÄ±cÄ±nÄ±n bilgileri
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "actions@github.com"
          commit_author: "GitHub Actions Bot <actions@github.com>"
